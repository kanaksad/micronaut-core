plugins {
    id "io.micronaut.build.internal.convention-library"
    id 'org.checkerframework' version '0.6.30'
}

apply plugin: 'org.checkerframework'

repositories {
    mavenLocal()
}

checkerFramework {
    checkers = [
            'org.checkerframework.checker.tainting.TaintingChecker',
    ]
    skipCheckerFramework = true
}

dependencies {
    annotationProcessor project(":inject-java")
    annotationProcessor project(":graal")
    checkerFramework 'org.checkerframework:checker:3.37.1-SNAPSHOT'
    implementation 'org.checkerframework:checker-qual:3.37.1-SNAPSHOT'

    api project(":jackson-core")

    compileOnly libs.graal
    compileOnly platform(libs.test.boms.micronaut.validation)
    compileOnly (libs.micronaut.validation) {
        exclude group: 'io.micronaut'
    }

    api libs.managed.jackson.databind
    api libs.managed.jackson.datatype.jdk8
    api libs.managed.jackson.datatype.jsr310
    compileOnly(libs.managed.jackson.module.kotlin) {
        transitive = false
    }
    compileOnly(libs.managed.jackson.module.afterburner) {
        transitive = false
    }
    compileOnly(libs.managed.jackson.module.parameterNames) {
        transitive = false
    }

    testAnnotationProcessor project(":inject-java")
    testImplementation project(":inject-java")
    testImplementation project(":inject-java-test")
    testImplementation project(":inject-groovy")
    testImplementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml"
    testImplementation libs.managed.snakeyaml
    if (!JavaVersion.current().isJava9Compatible()) {
        testImplementation files(org.gradle.internal.jvm.Jvm.current().toolsJar)
    }
}
