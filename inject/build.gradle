plugins {
    id "io.micronaut.build.internal.convention-core-library"
    id 'org.checkerframework' version '0.6.30'
}

apply plugin: 'org.checkerframework'

repositories {
    mavenLocal()
}

checkerFramework {
    checkers = [
            'edu.ucr.cs.riple.taint.ucrtainting.UCRTaintingChecker',
    ]
    extraJavacArgs = [
            "-AannotatedPackages=io.micronaut",
            "-AenableLibraryCheck",
            "-AenableSideEffect",
            "-nowarn",
            "-AsuppressWarnings"
    ]
    skipCheckerFramework = true
}

micronautBuild {
    core {
        documented = false
        usesMicronautTestJunit()
    }

}

dependencies {
    compileOnly libs.javax.inject
    api libs.jakarta.inject.api
    api libs.managed.jakarta.annotation.api
    api project(':core')

    compileOnly libs.managed.snakeyaml
    compileOnly libs.managed.groovy
    compileOnly libs.managed.kotlin.stdlib.jdk8

    checkerFramework 'org.checkerframework:checker:3.37.1-SNAPSHOT'
    compileOnly 'org.checkerframework:checker-qual:3.37.1-SNAPSHOT'

    annotationProcessor 'edu.ucr.cs.riple.taint:ucrtainting-checker:0.1'
    compileOnly 'edu.ucr.cs.riple.taint:ucrtainting-checker-qual:0.1'

    testImplementation project(":context")
    testImplementation project(":inject-groovy")
    testImplementation project(":inject-test-utils")
    testImplementation libs.systemlambda
    testImplementation libs.managed.snakeyaml
    testRuntimeOnly libs.junit.jupiter.engine
}

tasks.withType(Test).configureEach {
    if (JavaVersion.current().majorVersion.toInteger() >= 17) {
        logger.warn("Opening java.util, so SystemLambda can work")
        jvmArgs += ['--add-opens', 'java.base/java.util=ALL-UNNAMED']
    }
}

checkstyleMain.enabled = false
